---
title: "new-intro-tidy-data"
format: html
editor: visual
---

## Learning Objectives {.unnumbered}

Learn how to design and create effective data tables by: 

- applying tidy and normalized data principles, 
- following best practices to format data tables' content, 
- relating tables following relational data models principles, and 
- understanding how to perform table joins.


## Tidy Data

### Values, variables, observations, and entities

Before we dive into tidy data, we need to get acquainted with our building blocks. 
A dataset is a collection of **values**, with each value belonging to an observation and a variable. 

- An **observation** groups all the values measured for an individual **entity**. For example, an observation about a plant could include the species name, date of collection and altitude of the place where the plant was found. The plants found would be the entity.

- A **variable** groups all the values that measure the same attribute. In the previous example, the variables would be the date of collection, altitude and species name. 

::: callout-note
“Variable” is a general term that covers multiple types of attributes. For example, when we are collecting data to investigate a causal relationship, variables include both *explanatory variables* (also called independent variables) and *response variables* (also called dependent variables). We could also have a classifier variable that assigns a unique identifier to each observation. 

When we want to document our values, we must think of the best way to organize them so they clearly relate to the variables they represent and the observations they belong to.
:::


### What is tidy data?

Tidy data is a standardized way of organizing data tables that allows us to manage and analyze data efficiently, because it makes it straightforward to understand the corresponding variable and observation of each value.
The **tidy data principles** are [REF](https://cran.r-project.org/web/packages/tidyr/vignettes/tidy-data.html):

1. Every column is a variable.
2. Every row is an observation.
3. Every cell is a single value.

The following is an example of tidy data - it’s easy to see the three tidy data principles apply.

![](images/tidy-data-images/tidy_data/tidy_data.png)
![](images/tidy-data-images/tidy_data/tidy_variables.png)

![](images/tidy-data-images/tidy_data/tidy_observations.png)

![](images/tidy-data-images/tidy_data/tidy_values.png)

### Recognizing untidy data
Anything that does not follow the three tidy data principles is **untidy data**. 

There are *many* ways in which data can become untidy, some can be noticed right away, while others are more subtle. In this section we will look at some examples of common untidy data situations. 

#### Example 1
The following is a screenshot of an actual dataset that came across NCEAS. We have all seen spreadsheets that look like this - and it is fairly obvious that whatever this is, it isn't very tidy. Let's dive deeper into why we consider it untidy data.

![](images/WhyManage-small.png)

##### Multiple tables
To begin with, notice there are actually three smaller tables within this table. Although for our human brain it is easy to see and interpret this, it is extremely difficult to get a computer to see it this way. 

![](images/WhyManage-small.png)

Having multiple tables within the same table will create headaches down the road should you try to read in this information using R or another programming language. 
**Having multiple tables immediately breaks the tidy data principles**, as we will see next.


##### Inconsistent columns

In tidy data, **each column corresponds to a single variable**. 
If you look down a column, and see that multiple variables exist in the table, the data is not tidy. 
A good test for this can be to see if you think the column consists of only one unit type.

![](images/WhyManage-small.png)

##### Inconsistent rows

The second principle of tidy data is: **every column must be a single observation**. If you look across a single row, and you notice that there are clearly multiple observations in one row, the data are likely not tidy.

![](images/WhyManage-small.png)

##### Marginal sums and statistics 

**Marginal sums and statistics are not considered tidy**. They break principle one, “Every column is a variable”, because a marginal statistic does not represent the same variable as the values it is summarizing. They also break principle two, “Every row is an observation”, because they represent a combination of observations, rather than a single one.

![](images/WhyManage-small.png)

#### Example 2

Consider the following table. 
It’s a single one this time! 
It shows data about species observed at a specific site and date. The column headers refer to the following:

- *id*: id of row
- *date*: date when a species was observed
- *site*: site where a species was observed
- *name*: site’s name
- *altitude*: site’s altitude
- *sp1code*, *sp2code*: species code for two plants observed 
- *sp1height*, *sp2height*: height of the animals observed

Take a moment to see why this is not tidy data.

![](images/tidy-data-images/tidy_data/untidy_1.png)

##### Multiple Observations 
Remember that an observation is all the values measured for an individual **entity**. 
If our entity is a single observed animal, then the values we measured are date and site of observation, the temperature, and the species code and height. 
This table breaks the second tidy data principles: Every row is an observation. 

![](images/tidy-data-images/tidy_data/untidy_2.png)

People often refer to this as “*wide* format”, because the observations are spread across a wide number of columns. Note that, should one encounter a new species in the survey, we would have to add new columns to the table. This is difficult to analyze, understand, and maintain. To solve this problem, we can create a single column for species code and a single column for species height as in the following table.

![](images/tidy-data-images/tidy_data/tidy_not_normal.png)
