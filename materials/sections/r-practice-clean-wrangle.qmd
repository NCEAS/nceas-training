
## Learning Objectives {.unnumbered}

NAME OJECTIVES

::: callout-note
## Acknowledgements

These exercises are adapted from Allison Horst's EDS 221: Scientific Programming Essentials Course for the Bren School's Master of Environmental Data Science program.
:::

## About the data {.unnumbered}

These exercises will be using data on abundance, size, and trap counts (fishing pressure) of California spiny lobster (*Panulirus interruptus*) and were collected along the mainland coast of the Santa Barbara Channel by Santa Barbara Coastal LTER researchers [@lter2022].

## Setup

::: callout-tip
## GitHub - R workflow

1.  Create a new repository on GitHub
    i.  When creating the repository, add a brief description (i.e. R practice session cleaning and wrangling data during Delta Science Program Synthesis and Training session 1), keep the repo Public, and Initialize the repo with a `README` file and an R `.gitignore` template.
2.  Clone the repository to a new project in RStudio
3.  For this exercise we are going to use the [SBC LTER: Reef: Abundance, size and fishing effort for California Spiny Lobster (Panulirus interruptus), ongoing since 2012](https://portal.edirepository.org/nis/mapbrowse?packageid=knb-lter-sbc.77.8) data. Navigate to this link and briefly explore the data packege.
4.  Go back to RStudio and open a new Quarto file
    a. Give it a title (Eg: "Exercise: Explore, Clean, and Wrangle Data") and add your name to the `author` field
    b. Delete the default text
    c. Using level 2 headers, create an outline for this exercise (Include: About the data, Read and Explore data, Question 1, Question 2 , ... Quartion 6).
    d. Save this file (eg. `exercise-clean-wrangle.qmd`)
5.  After saving the file, `stage`, `commit`, write a commit message, `pull`, and `push` this file to the remote repository (on GitHub)
:::


::: callout-tip
## Read and Explore Data

1. Load the following libraries at the top of your Quarto file

```{r}
#| code-fold: false
#| message: false
library(readr)
library(dplyr)
library(ggplot2)
library(tidyr)
```

2.  Read in the data and store the data frame as `lobster_abundance`

Navigate to the [data package site](https://portal.edirepository.org/nis/mapbrowse?packageid=knb-lter-sbc.77.8) and copy the  the url to access the *Time-series of lobster abundance and size* data. Hover over the Download button --> right click --> "Copy Link Address". Read the data directly from the url.

```{r}
#| code-fold: false
#| message: false
lobster_abundance <- read_csv("https://portal.edirepository.org/nis/dataviewer?packageid=knb-lter-sbc.77.8&entityid=f32823fba432f58f66c06b589b7efac6")
```

3.  Look at your data. Take a minute to explore what your data structure looks like, what data types are in the data frame, or use a function to get a high-level summary of the data you're working with.

4.  Use the `Git` workflow: `Stage > Commit > Pull > Push`

    -   **Note:** You also want to `Pull` when you first open a project
:::


## Convert missing values using `mutate()` and `na_if()`

::: callout-note
### Question 1

The variable `SIZE_MM` uses -99999 as the code for missing values (see metadata or use `unique()`). This has the potential to cause conflicts with our analyses, so let's convert -99999 to an `NA` value. Do this using `mutate()` and `na_if()`. Look up the help page to see how to use `na_if()`. Check your output data using `unique()`.
:::

```{r}
lobster_abundance <- lobster_abundance %>% 
    mutate(SIZE_MM = na_if(SIZE_MM, -99999))
```

## `filter()` practice

::: callout-note
### Question 2

Create and store a subset that does NOT include observations from Naples Reef (`NAPL`). Check your output data frame to ensure that `NAPL` is NOT in the data frame (hint: `unique()` gives you the unique values in a column).
:::

```{r}
not_napl <- lobster_abundance %>% 
    filter(SITE != "NAPL")
```

::: callout-note
### Question 3

Create and store a subset with lobsters at Arroyo Quemado (`AQUE`) OR with a carapace length greater than 70 mm. Check your output.
:::

```{r}
aque_70mm <- lobster_abundance %>% 
    filter(SITE == "AQUE", SIZE_MM >= 70)
```

::: callout-important
## Save your work and use `Git`

Don't forget the `Git` workflow! After you've completed the exercises or reached a significant stopping point, use the workflow: `Stage > Commit > Pull > Push`
:::


### Question 4

Add a new column that contains lobster carapace length converted to centimeters. There are 10 millimeters in 1 centimeter. Check your output.

```{r}

lobster_cm <- lobster_abundance %>% 
  mutate(SIZE_CM = SIZE_MM / 10)
```

### Question 5

Find the mean of lobster carapace length using `mean()`, and group by `SITE`. Think about how you want to treat the `NA` values in `SIZE_MM` (Hint: check the arguments in `mean()`). Check your output.

```{r}
lobster_mean <- lobster_abundance %>% 
  group_by(SITE) %>% 
  summarize(MEAN_LENGTH = mean(SIZE_MM, na.rm = TRUE))
```

### Question 6

Find the maximum carapace length using `max()` and group by `SITE` and `MONTH`. Think about how you want to treat the NA values in `SIZE_MM`. Check your output.

```{r}

max_lobster <- lobster_abundance %>% 
  group_by(SITE, MONTH) %>% 
  summarize(MAX_LENGTH = max(SIZE_MM, na.rm = TRUE))
```
