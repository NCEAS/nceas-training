---
title: "Reproducible Workflows Using `targets`"
format: html
bibliography: book.bib
---

## Learning Objectives {.unnumbered}

- Illustrate importance of utilizing reproducible workflows to increase project efficiency and sharing of analyses, as well as reducing computational resources.
- Apply the R package `targets` workflow framework to scientific projects.
- Organize projects in modular steps to improve understanding and computational flexibility.

::: {.callout-note icon=false}
## Acknowledgements

This lesson is adapted from the following resources:

- Journal article [Improving ecological data science with workflow management software](https://doi.org/10.1111/2041-210X.14113) by Brousil et al
- Brousil et al's accompanying example, [A worked targets example for ecologists](https://targets-ecology.netlify.app/)
- RLadies Santa Barbara Chapter Workshop: An introduction to `targets` for R

:::

## Challenges of Workflows

All research projects have a workflow of some kind and typically includes steps like: data preparation and harmonization, running analyses or models, creating visualizations, and more.

![Example of ideal straightforward data workflow](images/reproducible-workflows-targets-1.png)

However, many environmental research projects are becoming **increasingly more complex** as researchers are utilizing **larger datasets** that require **complicated analytical methods**. More complexity means more steps, and more room for error or poor organizational methods that make projects difficult to reproduce. More complex analysis may also mean **longer run times**, which can make updating functions and analysis time-consuming.

![Example of a more realistic data workflow...](images/reproducible-workflows-targets-2.png)

This is where **reproducible workflow tools and packages**, like the R package `targets`, can play a huge role in **streamlining complex workflows** and ease the organization and sharing of projects.

Other **interchangeable terms for workflows** are:

-   Workflow Management Systems (WMS) 
-   Data pipelines
-   Data workflow

## Benefits of Reproducible Workflows

A major benefit of WMS is the capacity to track the status of all required files and functions to prevent steps in a larger pipeline from being skipped and by ensuring that data are kept up to date as models or harmonization routines change. Despite WMS's benefits, adopting a WMS requires moving away from performing serial analytical operations within single or multiple scripts to instead breaking an analysis into smaller functions that are modular (Figure 1), thereby providing more computational flexibility. [@brousil2023]

## Challenges of Reproducible Workflows - REMOVE

WMS requires moving away from performing serial analytical operations within single or multiple scripts to instead breaking an analysis into smaller functions that are modular, thereby providing more computational flexibility [@brousil2023]

Indeed, researchers will face a familiar trade-offâ€”to invest the personnel time in learning and deploying a tool like WMS to save personnel and compute time later or to accept that less efficient, but more familiar analytical frameworks will come with costs in personnel time, compute time and potentially additional associated payments for computing resources. The balance will depend on the complexity of the analysis, the expectation of reusing the code over time and the resources available to the researcher (e.g. funds for computing or personnel) [@brousil2023]. 

## Leveraging Reproducible Workflows & Tools

WMS may not be needed by most beginners, but learning about these tools early may inspire researchers with the understanding that their analyses can scale with the ambition and complexity of their most pressing research questions. Implementing WMS is an investment that does take time but can save a great deal of time and frustration later [@brousil2023].

### R Package: `targets` for Reproducible Worklows {.unnumbered}

::: {.callout-caution icon=false}
#### What is the `targets` package?
`targets` is a package for R that analyzes and manages your workflow or analysis pipeline. It helps to save its users time by re-running outdated analysis steps only when needed. `targets` is a part of [rOpenSci](https://ropensci.org/).

`targets` can also help users build, visualize, and manage workflows from raw files to outputs.
:::

## Exercise: Creating a Pipeline using `targets`
